@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate( -50%, -50%);
}

/*
 MEDIA QUERY MANAGER
0 - 600px: PHONE
500 - 900px: TABLET PORTRAIT
900 - 1200px: TABLET LANDSCAPE
[ 1200 - 1800 ] WHERE NORMAL STYLES APPLY
1800px: TABLET PORTRAIT


$breakpoint argument choices
- phone
- tab-port
- tab-land
- big-desktop


ORDER: Base + typography > general layout + grid > page layout > components
 */

@mixin respond($breakpoint)
{
  @if $breakpoint == 'phone'
  {
    @media screen and ( max-width: 37.5em ) {@content} // 600px
  }

  @if $breakpoint == 'tab-port'
  {
    @media screen and  ( max-width: 56.25em ) {@content} // 900px
  }

  @if $breakpoint == 'tab-land'
  {
    @media screen and  ( max-width: 75em ) {@content} // 1200px
  }

  @if $breakpoint == 'big-desktop'
  {
    @media screen and  ( min-width: 112.5em ) {@content} // 1800px
  }
}

@mixin container {
    padding: 0 16px;

    @media screen and ( min-width: $bp-largest ) {
      max-width: 85%;
      margin-left: auto;
      margin-right: auto;
    }
}


@mixin textShadow {
  text-shadow: 0 0 1em ($color-black);
}

@mixin boxShadow( $color, $bring-to-front: false ) {
    box-shadow: 0 0 4em ( $color );

    //@if $bring-to-front {
    //    z-index: 1;
    //}
}

@mixin typeWriter( $color, $animate: false ) {
    overflow: hidden; /* Ensures the content is not revealed until the animation */
    border-right: .15em solid $color; /* The typwriter cursor */
    white-space: nowrap; /* Keeps the content on a single line */
    margin: 0 auto; /* Gives that scrolling effect as the typing happens */
    letter-spacing: .15em; /* Adjust as needed */

    @if $animate {
        animation:
              typing 1.5s steps(40, end),
              blink-caret .75s step-end infinite;
    }
}

@mixin transitionOpacityIn( $time ) {
    opacity: 0;
    transition: opacity $time ease-in-out;
}

@mixin transitionOpacityOut( $time ) {
    opacity: 1;
    transition: opacity $time ease-in-out;
}

@mixin smoothFadingGradient( $direction, $r, $g, $b ) {
  background: linear-gradient($direction,
          rgba($r, $g, $b) 0%,
          rgba($r, $g, $b, 0.738) 19%,
          rgba($r, $g, $b, 0.541) 34%,
          rgba($r, $g, $b, 0.382) 47%,
          rgba($r, $g, $b, 0.278) 56.5%,
          rgba($r, $g, $b, 0.194) 65%,
          rgba($r, $g, $b, 0.126) 73%,
          rgba($r, $g, $b, 0.075) 80.2%,
          rgba($r, $g, $b, 0.042) 86.1%,
          rgba($r, $g, $b, 0.021) 91%,
          rgba($r, $g, $b, 0.008) 95.2%,
          rgba($r, $g, $b, 0.002) 98.2%,
          transparent 100% );
}